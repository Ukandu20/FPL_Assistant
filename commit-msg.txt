feat(fbref-pipeline): canonical scrape→clean→integrate→form flow; FDR truth in team_form; price-gated minutes; GK/OUT z-score split; ops docs

## Why
Unify the FBref pipeline from scraping to model-ready features, remove hidden coupling, and make **team_form** the **only** source of truth for FDR. Improve rebuild ergonomics (versioning/force), add price gating for minutes, and document the weekly “golden path”.

---

## Top-level changes
- **Source of truth:** `features/<ver>/<SEASON>/team_form.csv` now defines FDR for everything. The fixture calendar only mirrors it for convenience.
- **Canonical order:** scrape → clean → fixtures (neutral or latest FDR) → team_form (FDR truth) → fixtures (re-inject FDR) → player_minutes (optional FPL enrich) → players_form.
- **Docs:** Added an end-to-end FBref manual with exact commands, required files, outputs, and failure modes.

---

## Scrape
**scripts/fbref_pipeline/scrape/match_stats_scraper.py**
- Scrapes `schedule`, `player_match/*`, `team_match/*` (player_match first).
- If native team_match is missing, uses robust aggregate fallback.
- Writes schema-only CSVs when upstream is empty/unavailable to keep downstream idempotent.
- Normalizes `season`, `league`; polite sleep to avoid rate limits.

**scripts/fbref_pipeline/scrape/season_stats_scraper.py**
- Scrapes `player_season_*`, `team_season_*` with same schema-preserving fallback.
- Normalizes `season`, `league`.

---

## Clean & normalize
**scripts/fbref_pipeline/clean/clean_fbref_csvs.py**
- Flattens headers; coercive numeric parsing; Unicode-safe.
- Stable IDs:
  - `game_id` from FBref slug when available; otherwise deterministic hash of date/home/away.
  - `team_id`/`player_id` allocated and persisted under `data/processed/registry`.
- Venue & opponents:
  - `is_home/is_away` via team vs home/away;
  - `opponent_id` injected for all player/team match rows.
- Promotions/Relegations:
  - `is_promoted` by comparing standardized team codes vs prior season membership.
  - After finishing season *N*, marks relegations in season *N-1*; current season gets `is_relegated=0`.
- Positions: majority vote across match files; synced into `player_match` as `position` + `fpl_pos`.
- Ensures `schedule.csv` lands in `processed/fbref/<LEAGUE>/<SEASON>/team_match/schedule.csv`.

---

## Integrate: fixtures calendar
**scripts/fbref_pipeline/integrate/fixtures_meta_builder.py**
- Builds `registry/fixtures/<SEASON>/fixture_calendar.csv`.
- Trusts precomputed `home_id/away_id` (derived from FBref ids + is_home when needed).
- Injects FDR from `features/<version>/<SEASON>/team_form.csv` if present; otherwise fills neutral (`--neutral-fdr`, default 3.0).
- Emits debug artifacts when `fbref_id` or home/away ids are missing to aid manual reconciliation.
- New flags: `--features-root`, `--features-version`, `--neutral-fdr`, `--force`.

---

## Integrate: team form (FDR truth)
**scripts/fbref_pipeline/integrate/team_form_builder.py** (schema **v2.4**)
- **Trusts** `home_id/away_id`; validates consistency; can `--strict-ids` to abort on mismatches.
- Past-only rolling with venue-aware shrinkage and multi-season priors.
- **Symmetric FDR** per fixture (att/def split + continuous and bucketed 1–5).
- Versioning:
  - `--version vN` to write into an existing version (use `--force` to overwrite a season).
  - `--auto-version` to mint the next vN (logic changes).
  - `--write-latest` updates `features/latest` pointer (symlink or `LATEST_VERSION.txt`).

---

## Integrate: player minutes calendar
**scripts/fbref_pipeline/integrate/calendar_builder.py**
- Writes `registry/fixtures/<SEASON>/player_minutes_calendar.csv`.
- Merges FBref per-player stats (summary/keepers/defense/misc) with fixture calendar context (including **FDR passthrough**).
- Starters: uses FPL `starts` when present; otherwise defaults to 1 with GK imputation (minutes>0 ⇒ starter).
- **Price gating:** `--include-price` toggles `price` column entirely.
  - Price sources (priority): `merged_gws.csv` → `master_fpl.json` → seasonal price JSON (if configured).
  - If excluded, no price column is written; no rows are dropped due to price.
- Also merges xP/points when present in `merged_gws.csv`.

---

## Integrate: players form
**scripts/fbref_pipeline/integrate/player_form_builder.py** (schema **v1.6**)
- Robust schema coercion with aliases; derives `save_pct` (saves / SOT against) and `days_since_last` when missing.
- Per-90 features; past-only rolling with venue shrinkage and priors.
- **Separate z-score pools for GK vs Outfield** by `(season, gw_orig)`; **flip sign** for defensive metrics so higher is better.
- Writes `features/<version>/<SEASON>/players_form.csv` + meta (window, tau, priors, feature list).

---

## Pipeline order (weekly “golden path”)
1. Scrape match + season for current season.
2. Clean current season (idempotent; `--force` only when upstream changes).
3. Fixtures (pass 1; neutral FDR if no team_form yet).
4. **Team form** `--version v1 --force` (FDR truth).
5. Fixtures (pass 2; **re-inject** latest FDR).
6. Player minutes calendar (`--include-price` if needed).
7. Players form `--version v1 --force`.

> Policy: keep **v1** for logic-stable refreshes; bump version only with logic or hyper-param changes.

---

## Breaking changes / migrations
- **FDR source moved**: downstream must treat `team_form.csv` as authoritative. Fixture calendar’s FDR is a mirror and may lag unless step 5 is run.
- **Schedule path expectation**: must exist at `processed/fbref/<LEAGUE>/<SEASON>/team_match/schedule.csv`.
- **Price optionality**: consumers expecting `price` must pass `--include-price` (or adapt to its absence).

**One-time migration:**
clean (current season) → fixtures (neutral) → team_form (v1, --force) → fixtures (re-inject) → minutes (--include-price?) → players_form (v1, --force)
